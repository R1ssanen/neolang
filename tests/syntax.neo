$ This is the neolang interpreter testfile.
  This is a comment block. Everything within
  the signs is treated as comments. $

$ Entry point.
  Takes argument count as 32-bit integer,
  and argument strings as array of arrays
  of 8-bit characters. Returns integer
  exit code. $

main(i32: argc, i8[][]: argv) -> i32:

	$ 'ret', 'cont', 'break' and 'exit'
      close a scope. A scope must
  	  use one of these calls to
  	  mark its end. $

	if true:
		ret 10;

	$ Static type system. $	
	i64: _var = 7;
	
	$ Acquire pointer by 'at' operator. $
	u64: MemPtr = @_var;

	$ Hash any value by 'hash' operator. $
	u32: HashVal = #_var;	

    $ Neolang is const by default,
      mutable variables are made
      with 'var' specifier. $
    b8: var Boolean = false;

    $ Exit keyword calls system exit
      with integer literal exit code. $
    if var: exit !var;

    ret var;

